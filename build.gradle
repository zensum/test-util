plugins {
    id 'org.jetbrains.kotlin.jvm' version "1.2.50"
    id "com.github.johnrengelman.shadow" version "2.0.4"
}
apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'org.jetbrains.kotlin.jvm'
apply from: "jar.gradle"


def kotlin_version = '1.2.50'
def kotlin_api_version = '1.2'
def jvm_version = '1.8'
def junit_platform_version = '1.1.0'

group 'se.zensum.test'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
    maven { url "https://dl.bintray.com/kotlin/kotlinx" }
    maven { url "https://dl.bintray.com/kotlin/ktor" }
    maven { url "https://dl.bintray.com/palantir/releases" }
    maven {
        url "https://jitpack.io"
        if(System.getenv("JITPACK_TOKEN") == null) {
            System.err.println("JITPACK_TOKEN was null. Only public repositories will be accessible.")
        }
        credentials { username System.getenv("JITPACK_TOKEN") ?: "" }
    }
}


dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-jdk8:0.22.5'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:0.22.5'
    implementation('com.palantir.docker.compose:docker-compose-rule-junit4:0.33.0')
    compile 'org.junit.jupiter:junit-jupiter-api:5.3.0-M1'

    testCompile 'org.junit.jupiter:junit-jupiter-api:5.0.1'
    testRuntime "org.junit.platform:junit-platform-launcher:$junit_platform_version"
    testRuntime 'org.junit.jupiter:junit-jupiter-engine:5.0.1'
}

test {
    useJUnitPlatform()
}
kotlin {
    experimental {
        coroutines 'enable'
    }
}

compileKotlin {
    kotlinOptions {
        languageVersion = kotlin_api_version
        apiVersion = kotlin_api_version
        jvmTarget = jvm_version
        javaParameters = true   // Useful for reflection.
    }
}
compileTestKotlin {
    kotlinOptions {
        languageVersion = kotlin_api_version
        apiVersion = kotlin_api_version
        jvmTarget = jvm_version
        javaParameters = true   // Useful for reflection.
    }
}

task wrapper(type: Wrapper) {
    description = 'Generates gradlew[.bat] scripts for faster execution'
    gradleVersion = '4.7'
}